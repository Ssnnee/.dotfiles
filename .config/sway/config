include colorscheme
# Logo key. Use Mod1 for Alt. nmtui
set $mod Mod4

set $left h
set $down j
set $up k
set $right l

# set $rof "rofi -modi drun,run -show drun"
set $menu rof  | dmenu_path | dmenu | xargs swaymsg exec --

output * bg /home/sne/Pictures/wallpapers/5120x2880.jpg fill


default_border pixel 2

# Change the keyboard layout
input * {
        xkb_layout "fr"
}
input * xkb_options "caps:escape"
input * tap enabled

input type:keyboard {
   repeat_delay 160
   repeat_rate 70
}

exec_always {
  gsettings set org.gnome.desktop.interface gtk-theme "Breeze-Dark"
  gsettings set org.gnome.desktop.interface icon-theme "breeze-dark"
}
# NetworkManager
exec --no-startup-id nm-applet
# exec nm-applet

# Passmenu
# bindsym $mod+p exec passmenu
    # Start a terminal
bindsym $mod+Return exec st

# Kill focused window
bindsym $mod+Shift+q kill
bindsym $mod+q kill

# Start your launcher
# bindsym $mod+d exec "rofi -modi drun,run -show drun"
bindsym $mod+d exec fuzzel

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

bindsym $mod+Ctrl+r restart

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec "sway exit"
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# For optmot layout
bindsym $mod+p focus left
bindsym $mod+t focus down
bindsym $mod+s focus up
bindsym $mod+r focus right

# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

bindsym $mod+Shift+p move left
bindsym $mod+Shift+t move down
bindsym $mod+Shift+s move up
bindsym $mod+Shift+r move right

# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Switch to workspace
bindsym $mod+0x26 workspace number 1
bindsym $mod+0xe9 workspace number 2
bindsym $mod+0x22 workspace number 3
bindsym $mod+0x27 workspace number 4
bindsym $mod+0x28 workspace number 5
bindsym $mod+0x2d workspace number 6
# bindsym $mod+6 workspace number 6
bindsym $mod+0xe8 workspace number 7
bindsym $mod+0x5f workspace number 8
bindsym $mod+0xe7 workspace number 9
bindsym $mod+0xe0 workspace number 10
# Move focused container to workspace
bindsym $mod+Shift+0x26 move container to workspace number 1
bindsym $mod+Shift+0xe9 move container to workspace number 2
bindsym $mod+Shift+0x22 move container to workspace number 3
bindsym $mod+Shift+0x27 move container to workspace number 4
bindsym $mod+Shift+0x28 move container to workspace number 5
# bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+0xe8 move container to workspace number 7
bindsym $mod+Shift+0x5f move container to workspace number 8
bindsym $mod+Shift+0xe7 move container to workspace number 9
bindsym $mod+Shift+0xe0 move container to workspace number 10

# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
# bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent

# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+Ctrl+minus scratchpad show
#
# Resizing containers:
#
# resize window (you can also use the mouse for that)
mode "resize" {
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same for optmot layout
        bindsym p resize shrink width 10 px or 10 ppt
        bindsym t resize grow height 10 px or 10 ppt
        bindsym s resize shrink height 10 px or 10 ppt
        bindsym r resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

# bindsym $mod+b mode "resize"


bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Brightness
bindsym XF86MonBrightnessDown exec --no-startup-id "brillo -q -U 5"
bindsym XF86MonBrightnessUp exec --no-startup-id "brillo -q -A 5"


# Screenshots
bindsym Print exec grim $(xdg-user-dir PICTURES)/$(date +'%s_grim.png')
bindsym $mod+Print exec grim $(xdg-user-dir PICTURES)/$(date +'%s_grim.png') -g "$(slurp)"

# Clipboard Screenshots
bindsym Ctrl+Print exec grim - | wl-copy
bindsym Ctrl+$mod+Print exec grim -g "$(slurp)" | wl-copy

# Bind for opening specific app
bindsym $mod+Ctrl+f exec --no-startup-id firefox
bindsym $mod+Ctrl+t exec --no-startup-id telegram-desktop
bindsym $mod+Ctrl+d exec --no-startup-id discord
bindsym $mod+Ctrl+p exec --no-startup-id pcmanfm
bindsym $mod+Ctrl+b exec --no-startup-id brave
bindsym $mod+Ctrl+v exec --no-startup-id st nvim


bar {
    # position bottom

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
    status_command while ~/.config/sway/statusInfo ; do sleep 5; done

    # colors {
    #     statusline #ffffff
    #     background #323232
    #     inactive_workspace #32323200 #32323200 #5c5c5c
    # }
    # swaybar_command waybar
    swaybar_command swaybar
    # status_command while ./ramInfo.sh ; do sleep 1; done
    font UbuntuMono Nerd Font

}

exec swaymsg "workspace 1; exec st;"
exec swayidle -w \
    timeout 300 'swaylock -f -c 000000' \
    timeout 600 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"' \
    before-sleep 'swaylock -f -c 000000'
# exec swaymsg "workspace 2; exec firefox;"
 # exec swaymsg "workspace 2; exec qutebrowser;"
# exec swaymsg "workspace 3; exec st;"
# exec swaymsg "workspace 4; exec flatpak run org.telegram.desktop;"
# exec swaymsg "workspace 9; exec protonvpn-app;"

include /etc/sway/coinfig.d/*
